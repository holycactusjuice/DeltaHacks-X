{"ast":null,"code":"var _jsxFileName = \"/Users/yiyanhh/Documents/GitHub/DeltaHacks-X/src/components/NewNote.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YouTubeURLInput = () => {\n  _s();\n  const [url, setUrl] = useState(\"\");\n  const [startTime, setStartTime] = useState(\"\");\n  const [endTime, setEndTime] = useState(\"\");\n  const [wordCount, setWordCount] = useState(\"\");\n  const [summary, setSummary] = useState(\"\");\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsSubmitting(true);\n    setSummary(\"\"); // Reset summary for new request\n\n    try {\n      const response = await fetch(\"http://localhost:5000/get-summary\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          url,\n          startTime,\n          endTime,\n          wordCount\n        })\n      });\n      const data = await response.json();\n      if (data.summary) {\n        setSummary(data.summary);\n      }\n      // Handle other response data or errors as needed\n    } catch (error) {\n      console.error(\"Error:\", error);\n      // Handle error (e.g., display an error message)\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-[100px] min-h-screen p-4 w-[60vw] mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"flex flex-col gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: url,\n        onChange: e => setUrl(e.target.value),\n        placeholder: \"Enter YouTube URL\",\n        className: \"p-2 border border-gray-300 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: startTime,\n        onChange: e => setStartTime(e.target.value),\n        placeholder: \"Start Time (e.g., 00:00:00)\",\n        className: \"p-2 border border-gray-300 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: endTime,\n        onChange: e => setEndTime(e.target.value),\n        placeholder: \"End Time (e.g., 00:10:00)\",\n        className: \"p-2 border border-gray-300 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: wordCount,\n        onChange: e => setWordCount(e.target.value),\n        placeholder: \"Word Count\",\n        className: \"p-2 border border-gray-300 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: `p-2 text-white rounded ${isSubmitting ? \"bg-gray-500\" : \"bg-blue-500 hover:bg-blue-600\"}`,\n        disabled: isSubmitting,\n        children: isSubmitting ? \"Submitting...\" : \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), summary && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-4 p-4 bg-gray-800 rounded\",\n      children: summary\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(YouTubeURLInput, \"JhVmoT7L6LANHeERoNFGshNT7VI=\");\n_c = YouTubeURLInput;\nexport default YouTubeURLInput;\nvar _c;\n$RefreshReg$(_c, \"YouTubeURLInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","YouTubeURLInput","_s","url","setUrl","startTime","setStartTime","endTime","setEndTime","wordCount","setWordCount","summary","setSummary","isSubmitting","setIsSubmitting","handleSubmit","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","error","console","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["/Users/yiyanhh/Documents/GitHub/DeltaHacks-X/src/components/NewNote.jsx"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst YouTubeURLInput = () => {\n    const [url, setUrl] = useState(\"\");\n    const [startTime, setStartTime] = useState(\"\");\n    const [endTime, setEndTime] = useState(\"\");\n    const [wordCount, setWordCount] = useState(\"\");\n    const [summary, setSummary] = useState(\"\");\n    const [isSubmitting, setIsSubmitting] = useState(false);\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        setIsSubmitting(true);\n        setSummary(\"\"); // Reset summary for new request\n\n        try {\n            const response = await fetch(\"http://localhost:5000/get-summary\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                },\n                body: JSON.stringify({\n                    url,\n                    startTime,\n                    endTime,\n                    wordCount,\n                }),\n            });\n\n            const data = await response.json();\n            if (data.summary) {\n                setSummary(data.summary);\n            }\n            // Handle other response data or errors as needed\n        } catch (error) {\n            console.error(\"Error:\", error);\n            // Handle error (e.g., display an error message)\n        } finally {\n            setIsSubmitting(false);\n        }\n    };\n\n    return (\n        <div className=\"mt-[100px] min-h-screen p-4 w-[60vw] mx-auto\">\n            <form onSubmit={handleSubmit} className=\"flex flex-col gap-2\">\n                <input\n                    type=\"text\"\n                    value={url}\n                    onChange={(e) => setUrl(e.target.value)}\n                    placeholder=\"Enter YouTube URL\"\n                    className=\"p-2 border border-gray-300 rounded\"\n                />\n                <input\n                    type=\"text\"\n                    value={startTime}\n                    onChange={(e) => setStartTime(e.target.value)}\n                    placeholder=\"Start Time (e.g., 00:00:00)\"\n                    className=\"p-2 border border-gray-300 rounded\"\n                />\n                <input\n                    type=\"text\"\n                    value={endTime}\n                    onChange={(e) => setEndTime(e.target.value)}\n                    placeholder=\"End Time (e.g., 00:10:00)\"\n                    className=\"p-2 border border-gray-300 rounded\"\n                />\n                <input\n                    type=\"number\"\n                    value={wordCount}\n                    onChange={(e) => setWordCount(e.target.value)}\n                    placeholder=\"Word Count\"\n                    className=\"p-2 border border-gray-300 rounded\"\n                />\n                <button\n                    type=\"submit\"\n                    className={`p-2 text-white rounded ${\n                        isSubmitting\n                            ? \"bg-gray-500\"\n                            : \"bg-blue-500 hover:bg-blue-600\"\n                    }`}\n                    disabled={isSubmitting}\n                >\n                    {isSubmitting ? \"Submitting...\" : \"Submit\"}\n                </button>\n            </form>\n            {summary && (\n                <div className=\"mt-4 p-4 bg-gray-800 rounded\">{summary}</div>\n            )}\n        </div>\n    );\n};\n\nexport default YouTubeURLInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}